version: "3.8"

services:
  db:
    # platform: linux/arm64
    image: influxdb:latest
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: my-user
      DOCKER_INFLUXDB_INIT_PASSWORD: my-password
      DOCKER_INFLUXDB_INIT_ORG: my-org
      DOCKER_INFLUXDB_INIT_BUCKET: my-bucket
    volumes:
      - influxdb_data:/var/lib/influxdb2
    ports:
      - "8086:8086"

  timescaledb:
    image: timescale/timescaledb-ha:pg14-latest
    environment:
      POSTGRES_PASSWORD: my-password
      POSTGRES_DB: mydatabase
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"

  oaievals-collector:
    platform: linux/arm64
    build: .
    restart: always
    volumes:
      - ./data:/data
    depends_on:
      - db
      - loki
      - timescaledb
    environment:
      INFLUXDB_HOST: http://db:8086
      INFLUXDB_USER: my-user
      INFLUXDB_TOKEN: WlzWM122bT1CvsLTNsgivIIKWaEBo6F1w2tLzmfaQSEDQ6XQkFhBeSwJCeHBxYGKonhRKCIL8ird9T7CfkSoJw==
      INFLUXDB_ORG: my-org
      INFLUXDB_BUCKET: my-bucket
      TIMESCALEDB_HOST: postgres://postgres:my-password@timescaledb:5432/mydatabase
      LOKI_URL: http://loki:3100/loki/api/v1/push
    ports:
      - "8081:8080"

  ##Grafana
  grafana:
    image: grafana/grafana:latest
    restart: always
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - db
      - loki
      - timescaledb
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin

volumes:
  influxdb_data:
  timescaledb_data:
  grafana_data:
